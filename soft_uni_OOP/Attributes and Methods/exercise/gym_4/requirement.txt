    4. Gym
Create the following project structure

Class Customer
Upon initialization each customer will receive the following parameters: name: str, address: str, email: str. Each customer should also have an id (autoincremented starting from 1)
Implement the __repr__ method so it returns the info about the customer in the following format: "Customer <{id}> {name}; Address: {address}; Email: {email}"
Create a static method called get_next_id which returns the id that will be given to the next customer
Class Equipment
Upon initialization the class will receive the following parameters: name: str. Each equipment should also have an id (autoincremented starting from 1)
Implement the __repr__ method so it returns the info about the equipment in the following format: "Equipment <{id}> {name}"
Create a static method called get_next_id which returns the id that will be given to the next equipment
Class ExercisePlan
Upon initialization the class will receive the following parameters: trainer_id: int, equipment_id: int, duration: int (in minutes). Each plan should also have an id (autoincremented starting from 1). Create the following methods:
    • from_hours(trainer_id:int, equipment_id:int, hours:int) – creates new instance using the provided information
    • get_next_id() – static method that returns the id that will be given to the next plan
    • __repr__() – returns the information about the plan in the following format: "Plan <{id}> with duration {duration} minutes"
Class Subscription
Upon initialization the class will receive the following parameters: date:str, customer_id: int, trainer_id: int, exercise_id: int. The class should also have an id (autoincremented starting from 1).
Implement the __repr__ method so it returns the info about the subscription in the following format: "Subscription <{id}> on {date}"
Create a static method called get_next_id which returns the id that will be given to the next subscription
Class Trainer
Upon initialization the class will receive the following parameters: name:str. The class should also have an id (autoincremented starting from 1).
Implement the __repr__ method so it returns the info about the trainer in the following format: "Trainer <{self.id}> {self.name}"
Create a static method called get_next_id which returns the id that will be given to the next trainer
Class Gym
Upon initialization the class will not receive any parameters. However, it should have the following attributes: customers (list of customer objects, empty upon initialization), trainers (list of trainer objects, empty upon initialization), equipment (list of equipment objects, empty upon initialization), plans (list of plan objects, empty upon initialization), subscriptions (list of subscription objects, empty upon initialization)
Create the following methods:
    • add_customer(customer: Customer) – add the customer in the customer list, if the customer is not already in it
    • add_trainer(trainer: Trainer) – add the trainer to the trainers list, if the trainer is not already in it
    • add_equipment(equipment: Equipment) – add the equipment to the equipment list, if the equipment is not already in it
    • add_plan(plan: ExercisePlan) – add the plan to the plans list, if the plan is not already in it
    • add_subscription(subscription: Subscription) – add the subscription in the subscriptions list, if the subscription is not already in it
    • subscription_info(subscription_id:int) – get the subscription, the customer and trainer to it, the plan to that trainer and the equipment to the plan. Then return their string representations each separated by a new line
                                            Examples
Test Code:
                from project.customer import Customer
                from project.equipment import Equipment
                from project.exercise_plan import ExercisePlan
                from project.gym import Gym
                from project.subscription import Subscription
                from project.trainer import Trainer

                customer = Customer("John", "Maple Street", "john.smith@gmail.com")
                equipment = Equipment("Treadmill")
                trainer = Trainer("Peter")
                subscription = Subscription("14.05.2020", 1, 1, 1)
                plan = ExercisePlan(1, 1, 20)

                gym = Gym()

                gym.add_customer(customer)
                gym.add_equipment(equipment)
                gym.add_trainer(trainer)
                gym.add_plan(plan)
                gym.add_subscription(subscription)

                print(Customer.get_next_id())

                print(gym.subscription_info(1))
Output:
            2
            Subscription <1> on 14.05.2020
            Customer <1> John; Address: Maple Street; Email: john.smith@gmail.com
            Trainer <1> Peter
            Equipment <1> Treadmill
            Plan <1> with duration 20 minutes
