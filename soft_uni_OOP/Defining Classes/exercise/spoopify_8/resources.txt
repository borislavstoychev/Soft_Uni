    8. Spoopify
You are tasked to create three classes: a Song class, an Album class and a Band class.
The Song class should receive a name (string), length (float) and single (bool) upon initialization. It has one method:
    • get_info()
        ◦ Returns the information of the song in this format: "{song name} – {song length}"

The Album class should receive a name (string) and songs(one, many or none) as arguments upon initialization. It also has an attribute published (False by default). It has four methods:
    • add_song(song: Song)
        ◦ Adds the song to the album. Return "Song {song name} has been added to the album {name}."
        ◦ If the song is single, return "Cannot add {song name}. It's a single"
        ◦ If the album is published, return "Cannot add songs. Album is published."
        ◦ If the song is already added, return "Song is already in the album."

    • remove_song(song_name: str)
        ◦ Removes the song with the given name and return "Removed song {song name} from album {name}.
        ◦ If the song is not in the album, return "Song is not in the album."
        ◦ If the album is published, return "Cannot remove songs. Album is published."

    • publish()
        ◦ Publish the album and return "Album {name} has been published."
        ◦ If the album is published, return "Album {name} is already published."

    • details()
        ◦ Returns the information of the album, with the songs in it, in this format:
        "Album {name}
         == {first_song info}
         == {second_song info}
         …
         == {n_song info}
        "
The Band class should receive a name (string) upon initialization. It also has an attribute albums (empty list). It has three method:
    • add_album(album: Album)
        ◦ Adds an album to the collection and returns "Band {name} has added their newest album {name}."
        ◦ If the album is already added, return "Band {name} already has {album name} in their library."


    • remove_album(album_name: str)
        ◦ Removes the album from the collection and returns "Album {name} has been removed."
        ◦ If the album is published, return "Album has been published. It cannot be removed."
        ◦ If the album is not in the collection, return "Album {name} is not found."
    • details()
        ◦ Returns the information of the band, with their albums, in this format:
        "Band {name}
         {album details}
         ...
         {album details}
        "
                                        Examples:
Test Code:
        song = Song("Running in the 90s", 3.45, False)
        print(song.get_info())
        album = Album("Initial D", song)
        second_song = Song("Around the World", 2.34, False)
        print(album.add_song(second_song))
        print(album.details())
        print(album.publish())
        band = Band("Manuel")
        print(band.add_album(album))
        print(band.remove_album("Initial D"))
        print(band.details())
Output:
        Running in the 90s - 3.45
        Song Around the World has been added to the album Initial D.
        Album Initial D
        == Running in the 90s - 3.45
        == Around the World - 2.34

        Album Initial D has been published.
        Band Manuel has added their newest album Initial D.
        Album has been published. It cannot be removed.
        Band Manuel
        Album Initial D
        == Running in the 90s - 3.45
        == Around the World - 2.34
